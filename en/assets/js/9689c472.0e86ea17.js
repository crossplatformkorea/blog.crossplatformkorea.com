"use strict";(self.webpackChunkcrossplatformkorea_com=self.webpackChunkcrossplatformkorea_com||[]).push([[8993],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||l[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7859:function(e,t,n){n.d(t,{Z:function(){return o}});var r=n(7294);function o(e){var t=e.className,n=void 0===t?"adfit":t,o=e.style,a=e.unit,i=e.height,c=e.width;return(0,r.useEffect)((function(){var e=setTimeout((function(){var e=document.createElement("ins"),t=document.createElement("script");e.className="kakao_ad_area",e.style="display:none; width:100%;",t.async="true",t.type="text/javascript",t.src="//t1.daumcdn.net/kas/static/ba.min.js",e.setAttribute("data-ad-width",c.toString()),e.setAttribute("data-ad-height",i.toString()),e.setAttribute("data-ad-unit",a.toString()),document.querySelector("."+n).appendChild(e),document.querySelector("."+n).appendChild(t)}),100);return function(){clearTimeout(e)}}),[]),r.createElement("div",{style:o},r.createElement("div",{className:n}))}},9388:function(e,t,n){n.d(t,{Z:function(){return a}});var r=n(7294),o=n(7859);function a(e){var t=e.unit,n=e.className,a=e.height,i=void 0===a?100:a,c=e.width,s=void 0===c?320:c,u=e.style;return r.createElement(o.Z,{unit:t,height:i,width:s,className:n,style:Object.assign({flex:1,marginTop:24,marginBottom:24},u)})}},1336:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=n(9388),c=["components"],s={id:"expo-router",title:"Expo Router",sidebar_label:"Expo Router",sidebar_position:1},u=void 0,p={unversionedId:"react-native/router/expo-router",id:"react-native/router/expo-router",title:"Expo Router",description:"In React Native, there are various routers like react-navigation and react-native-navigation. However, in our community, we recommend expo-router.",source:"@site/docs/react-native/router/expo-router.mdx",sourceDirName:"react-native/router",slug:"/react-native/router/expo-router",permalink:"/en/docs/current/react-native/router/expo-router",draft:!1,editUrl:"https://github.com/crossplatformkorea/crossplatformkorea.com/edit/main/docs/react-native/router/expo-router.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"expo-router",title:"Expo Router",sidebar_label:"Expo Router",sidebar_position:1},sidebar:"react-native",previous:{title:"Router",permalink:"/en/docs/current/category/router"}},l={},m=[],d={toc:m};function f(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In React Native, there are various routers like ",(0,a.kt)("a",{parentName:"p",href:"https://reactnavigation.org"},"react-navigation")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/wix/react-native-navigation"},"react-native-navigation"),". However, in our community, we recommend ",(0,a.kt)("a",{parentName:"p",href:"https://docs.expo.dev/routing/introduction"},"expo-router"),".\nThis recommendation isn't merely because it's the latest router available, but because it's a file-based router. This not only helps in eliminating unnecessary code but also results in more concise and intuitive code."),(0,a.kt)(i.Z,{unit:"DAN-YpcHf9p49U5ykXi8",className:"adfit-top-mobile",mdxType:"AdFitMobileBanner"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Expo Router")," is a file-based router designed for ",(0,a.kt)("strong",{parentName:"p"},"Universal React Native")," applications built with ",(0,a.kt)("strong",{parentName:"p"},"Expo"),".\nThis router allows for managing screen transitions in both ",(0,a.kt)("strong",{parentName:"p"},"React Native")," and web applications, facilitating smooth navigation for users across different parts of the app's UI.\nThrough this, it's possible to manage screen transitions within an app using the same components across multiple platforms (Android, iOS, and web)."),(0,a.kt)("p",null,"Detailed information on how to use Expo Router can be found ",(0,a.kt)("a",{parentName:"p",href:"https://docs.expo.dev/routing/introduction"},"here"),".\nThis document explains how to manage screen transitions using Expo Router.\nFor instance, the following code demonstrates how to navigate between the ",(0,a.kt)("inlineCode",{parentName:"p"},"HomeScreen")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"ProfileScreen"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useNavigation } from '@react-navigation/native';\nimport { Button } from 'react-native';\n\nfunction HomeScreen() {\n  const navigation = useNavigation();\n\n  return (\n    <Button\n      title=\"Go to Profile\"\n      onPress={() => {\n        navigation.navigate('Profile', { name: 'Jane' });\n      }}\n    />\n  );\n}\n\nfunction ProfileScreen({ route }) {\n  return <Text>This is {route.params.name}'s profile</Text>;\n}\n")),(0,a.kt)("p",null,"In the code above, the ",(0,a.kt)("inlineCode",{parentName:"p"},"useNavigation")," hook is employed to retrieve the ",(0,a.kt)("inlineCode",{parentName:"p"},"navigation")," object, followed by rendering the ",(0,a.kt)("inlineCode",{parentName:"p"},"Button")," component.\nUpon triggering the ",(0,a.kt)("inlineCode",{parentName:"p"},"onPress")," handler, the ",(0,a.kt)("inlineCode",{parentName:"p"},"navigation.navigate")," method is invoked to transition to the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProfileScreen"),".\nAt this juncture, the ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," parameter is passed along. Within the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProfileScreen"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," parameter is accessed using ",(0,a.kt)("inlineCode",{parentName:"p"},"route.params.name"),"."),(0,a.kt)(i.Z,{unit:"DAN-weLLBNA8C31gpo1t",className:"adfit-bottom-mobile",mdxType:"AdFitMobileBanner"}))}f.isMDXComponent=!0}}]);
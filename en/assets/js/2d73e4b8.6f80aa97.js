"use strict";(self.webpackChunkcrossplatformkorea_com=self.webpackChunkcrossplatformkorea_com||[]).push([[6588],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(f,i(i({ref:t},l),{},{components:n})):a.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[m]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7859:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294);function o(e){var t=e.className,n=void 0===t?"adfit":t,o=e.style,r=e.unit,i=e.height,c=e.width;return(0,a.useEffect)((function(){var e=setTimeout((function(){var e=document.createElement("ins"),t=document.createElement("script");e.className="kakao_ad_area",e.style="display:none; width:100%;",t.async="true",t.type="text/javascript",t.src="//t1.daumcdn.net/kas/static/ba.min.js",e.setAttribute("data-ad-width",c.toString()),e.setAttribute("data-ad-height",i.toString()),e.setAttribute("data-ad-unit",r.toString()),document.querySelector("."+n).appendChild(e),document.querySelector("."+n).appendChild(t)}),100);return function(){clearTimeout(e)}}),[]),a.createElement("div",{style:o},a.createElement("div",{className:n}))}},9388:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(7294),o=n(7859);function r(e){var t=e.unit,n=e.className,r=e.height,i=void 0===r?100:r,c=e.width,s=void 0===c?320:c,p=e.style;return a.createElement(o.Z,{unit:t,height:i,width:s,className:n,style:Object.assign({flex:1,marginTop:24,marginBottom:24},p)})}},476:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=n(9388),c=["components"],s={id:"react",title:"React",sidebar_label:"React",sidebar_position:2},p=void 0,l={unversionedId:"react-native/react",id:"react-native/react",title:"React",description:"React Native is a framework for mobile app development, based on the fundamental principles of React. Understanding React's core concepts greatly assists in using React Native effectively.",source:"@site/docs/react-native/react.mdx",sourceDirName:"react-native",slug:"/react-native/react",permalink:"/en/docs/current/react-native/react",draft:!1,editUrl:"https://github.com/crossplatformkorea/crossplatformkorea.com/edit/main/docs/react-native/react.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"react",title:"React",sidebar_label:"React",sidebar_position:2},sidebar:"react-native",previous:{title:"VSCode Plugins",permalink:"/en/docs/current/react-native/development-environment/vscode-plugins"},next:{title:"Style",permalink:"/en/docs/current/category/style"}},m={},u=[{value:"React for React Native",id:"react-for-react-native",level:2},{value:"1. Component",id:"1-component",level:3},{value:"2. State &amp; Props",id:"2-state--props",level:3},{value:"props (Properties)",id:"props-properties",level:4},{value:"state (Status)",id:"state-status",level:4},{value:"3. Lifecycle &amp; Hooks",id:"3-lifecycle--hooks",level:3}],d={toc:u},f="wrapper";function h(e){var t=e.components,n=(0,o.Z)(e,c);return(0,r.kt)(f,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"React Native is a framework for mobile app development, based on the fundamental principles of React. Understanding React's core concepts greatly assists in using React Native effectively."),(0,r.kt)(i.Z,{unit:"DAN-YpcHf9p49U5ykXi8",className:"adfit-top-mobile",mdxType:"AdFitMobileBanner"}),(0,r.kt)("h2",{id:"react-for-react-native"},"React for React Native"),(0,r.kt)("p",null,"In this article, we'll delve into React's core concepts and see how they apply to React Native."),(0,r.kt)("h3",{id:"1-component"},"1. Component"),(0,r.kt)("p",null,"Components are the core of both React and React Native. They are reusable units that make up the UI and are independent and recyclable."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"React Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"function Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"React Native Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Text } from 'react-native';\n\nfunction Welcome(props) {\n  return <Text>Hello, {props.name}</Text>;\n}\n")),(0,r.kt)("h3",{id:"2-state--props"},"2. State & Props"),(0,r.kt)("p",null,"React components manage data through ",(0,r.kt)("inlineCode",{parentName:"p"},"state")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"props"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"Props")," are data passed down from parent components, while ",(0,r.kt)("inlineCode",{parentName:"p"},"state")," represents data that can change within a component."),(0,r.kt)("p",null,"Components can have their own state and properties (props), and the UI of a React application is composed of a combination of these components. Components can be defined either as functional or class-based. In modern React applications, functional components are predominantly used."),(0,r.kt)("p",null,"When designing components in React, ",(0,r.kt)("inlineCode",{parentName:"p"},"props")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"state")," are two crucial concepts. These two help define how a component processes and displays information."),(0,r.kt)("h4",{id:"props-properties"},"props (Properties)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"props"),' is short for "properties".'),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Information Transfer"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"props")," are used to pass information from a parent component to a child component."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Read-only"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"props")," cannot be modified within a component. In other words, a component must use the ",(0,r.kt)("inlineCode",{parentName:"li"},"props")," as they are received."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Example"),": Imagine giving someone your business card to convey your name. The information on that card doesn't change. Similarly, ",(0,r.kt)("inlineCode",{parentName:"li"},"props")," passed to a component can be thought of as unchangeable information.")),(0,r.kt)("h4",{id:"state-status"},"state (Status)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"state")," is information managed within the component."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Changeable"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state")," can change over time. It can be updated for various reasons, such as user interactions or receiving new data from a server."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Internally Managed"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state")," is managed only within the component, and it cannot be directly modified from outside."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Example"),": Imagine things like your mood or thoughts, which can change as time passes. The component's ",(0,r.kt)("inlineCode",{parentName:"li"},"state")," manages information that can change over time in a similar way.")),(0,r.kt)("p",null,"To summarize briefly:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"props"),": Information received from the parent that cannot be changed."),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"Official Documentation: ",(0,r.kt)("a",{parentName:"li",href:"https://react.dev/learn/passing-props-to-a-component"},"Passing Props to a Component")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"state"),": Information managed within the component that can change depending on time or circumstances."),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"Official Documentation: ",(0,r.kt)("a",{parentName:"li",href:"https://react.dev/learn/managing-state"},"Managing State")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"React Native Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import React, { useState } from 'react';\nimport { Text, Button } from 'react-native';\n\nfunction Counter(): JSX.Element {\n  const [count, setCount] = useState<number>(0);\n\n  const increment = () => {\n    setCount(prevCount => prevCount + 1);\n  };\n\n  return (\n    <>\n      <Text>{count}</Text>\n      <Button title=\"Increase\" onPress={increment} />\n    </>\n  );\n}\n\nexport default Counter;\n")),(0,r.kt)("h3",{id:"3-lifecycle--hooks"},"3. Lifecycle & Hooks"),(0,r.kt)("p",null,"Lifecycle methods are used in class components and get executed at specific times during a component's life. In function components, similar functionalities can be achieved using ",(0,r.kt)("inlineCode",{parentName:"p"},"Hooks"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"React Native Hooks Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useState, useEffect } from 'react';\nimport { Text } from 'react-native';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    // Executes when the component mounts or updates.\n    console.log('Component updated!');\n\n    return () => {\n      // Executes when the component will unmount.\n      console.log('Component will unmount!');\n    };\n  }, [count]); // Executes every time 'count' changes.\n\n  return <Text>{count}</Text>;\n}\n")),(0,r.kt)("p",null,"These fundamental concepts of React apply directly to React Native. Building on these React principles allows for more effective mobile app development in React Native. Thus, a solid grasp of React's fundamentals will naturally lead to a smoother transition to React Native."),(0,r.kt)(i.Z,{unit:"DAN-weLLBNA8C31gpo1t",className:"adfit-bottom-mobile",mdxType:"AdFitMobileBanner"}))}h.isMDXComponent=!0}}]);